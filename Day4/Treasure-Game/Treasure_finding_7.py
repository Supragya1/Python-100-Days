import Treasure_Map_creation_6
print('''
____________________________________________________________________
/ \-----     ---------  -----------     -------------- ------    ----/
\_/__________________________________________________________________/
|~ ~~ ~~~ ~ ~ ~~~ ~ _____.----------._ ~~~  ~~~~ ~~   ~~  ~~~~~ ~~~~|
|  _   ~~ ~~ __,---'_       "         `. ~~~ _,--.  ~~~~ __,---.  ~~|
| | \___ ~~ /      ( )   "          "   `-.,' (') \~~ ~ (  / _\ \~~ |
|  \    \__/_   __(( _)_      (    "   "     (_\_) \___~ `-.___,'  ~|
|~~ \     (  )_(__)_|( ))  "   ))          "   |    "  \ ~~ ~~~ _ ~~|
|  ~ \__ (( _( (  ))  ) _)    ((     \\//    " |   "    \_____,' | ~|
|~~ ~   \  ( ))(_)(_)_)|  "    ))    //\\ " __,---._  "  "   "  /~~~|
|    ~~~ |(_ _)| | |   |   "  (   "      ,-'~~~ ~~~ `-.   ___  /~ ~ |
| ~~     |  |  |   |   _,--- ,--. _  "  (~~  ~~~~  ~~~ ) /___\ \~~ ~|
|  ~ ~~ /   |      _,----._,'`--'\.`-._  `._~~_~__~_,-'  |H__|  \ ~~|
|~~    / "     _,-' / `\ ,' / _'  \`.---.._          __        " \~ |
| ~~~ / /   .-' , / ' _,'_  -  _ '- _`._ `.`-._    _/- `--.   " " \~|
|  ~ / / _-- `---,~.-' __   --  _,---.  `-._   _,-'- / ` \ \_   " |~|
| ~ | | -- _    /~/  `-_- _  _,' '  \ \_`-._,-'  / --   \  - \_   / |
|~~ | \ -      /~~| "     ,-'_ /-  `_ ._`._`-...._____...._,--'  /~~|
| ~~\  \_ /   /~~/    ___  `---  ---  - - ' ,--.     ___        |~ ~|
|~   \      ,'~~|  " (o o)   "         " " |~~~ \_,-' ~ `.     ,'~~ |
| ~~ ~|__,-'~~~~~\    \"/      "  "   "    /~ ~~   O ~ ~~`-.__/~ ~~~|
|~~~ ~~~  ~~~~~~~~`.______________________/ ~~~    |   ~~~ ~~ ~ ~~~~|
|____~jrei~__~_______~~_~____~~_____~~___~_~~___~\_|_/ ~_____~___~__|
/ \----- ----- ------------  ------- ----- -------  --------  -------/
\_/__________________________________________________________________/
''')
print('''
░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓████████▓▒░░▒▓█▓▒░       ░▒▓██████▓▒░  ░▒▓██████▓▒░ ░▒▓██████████████▓▒░ ░▒▓████████▓▒░      
░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░       ░▒▓█▓▒░      ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░             
░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░       ░▒▓█▓▒░      ░▒▓█▓▒░       ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░             
░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓██████▓▒░  ░▒▓█▓▒░      ░▒▓█▓▒░       ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓██████▓▒░        
░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░       ░▒▓█▓▒░      ░▒▓█▓▒░       ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░             
░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░       ░▒▓█▓▒░      ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░             
 ░▒▓█████████████▓▒░ ░▒▓████████▓▒░░▒▓████████▓▒░░▒▓██████▓▒░  ░▒▓██████▓▒░ ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓████████▓▒░                                                         
''')
print('''
░▒▓████████▓▒░░▒▓██████▓▒░       ░▒▓████████▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓████████▓▒░ 
   ░▒▓█▓▒░   ░▒▓█▓▒░░▒▓█▓▒░         ░▒▓█▓▒░    ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░        
   ░▒▓█▓▒░   ░▒▓█▓▒░░▒▓█▓▒░         ░▒▓█▓▒░    ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░        
   ░▒▓█▓▒░   ░▒▓█▓▒░░▒▓█▓▒░         ░▒▓█▓▒░    ░▒▓████████▓▒░░▒▓██████▓▒░   
   ░▒▓█▓▒░   ░▒▓█▓▒░░▒▓█▓▒░         ░▒▓█▓▒░    ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░        
   ░▒▓█▓▒░   ░▒▓█▓▒░░▒▓█▓▒░         ░▒▓█▓▒░    ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░        
   ░▒▓█▓▒░    ░▒▓██████▓▒░          ░▒▓█▓▒░    ░▒▓█▓▒░░▒▓█▓▒░░▒▓████████▓▒░ 
''')
print('''
 ░▒▓██████▓▒░  ░▒▓██████▓▒░ ░▒▓██████████████▓▒░ ░▒▓████████▓▒░       ░▒▓██████▓▒░ ░▒▓████████▓▒░ 
░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░             ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░        
░▒▓█▓▒░       ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░             ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░        
░▒▓█▓▒▒▓███▓▒░░▒▓████████▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓██████▓▒░        ░▒▓█▓▒░░▒▓█▓▒░░▒▓██████▓▒░   
░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░             ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░        
░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░             ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░        
 ░▒▓██████▓▒░ ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓████████▓▒░       ░▒▓██████▓▒░ ░▒▓█▓▒░        
''')

print('''
░▒▓████████▓▒░░▒▓█▓▒░░▒▓███████▓▒░ ░▒▓███████▓▒░ ░▒▓█▓▒░░▒▓███████▓▒░  ░▒▓██████▓▒░  
░▒▓█▓▒░       ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░ 
░▒▓█▓▒░       ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░        
░▒▓██████▓▒░  ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒▒▓███▓▒░ 
░▒▓█▓▒░       ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░ 
░▒▓█▓▒░       ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░ 
░▒▓█▓▒░       ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓███████▓▒░ ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░ ░▒▓██████▓▒░  
''')

print('''
░▒▓████████▓▒░░▒▓███████▓▒░ ░▒▓████████▓▒░ ░▒▓██████▓▒░  ░▒▓███████▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓███████▓▒░ ░▒▓████████▓▒░ ░▒▓███████▓▒░ 
   ░▒▓█▓▒░    ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░       ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░       ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░       ░▒▓█▓▒░        
   ░▒▓█▓▒░    ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░       ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░       ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░       ░▒▓█▓▒░        
   ░▒▓█▓▒░    ░▒▓███████▓▒░ ░▒▓██████▓▒░  ░▒▓████████▓▒░ ░▒▓██████▓▒░ ░▒▓█▓▒░░▒▓█▓▒░░▒▓███████▓▒░ ░▒▓██████▓▒░   ░▒▓██████▓▒░  
   ░▒▓█▓▒░    ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░       ░▒▓█▓▒░░▒▓█▓▒░       ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░              ░▒▓█▓▒░ 
   ░▒▓█▓▒░    ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░       ░▒▓█▓▒░░▒▓█▓▒░       ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░              ░▒▓█▓▒░ 
   ░▒▓█▓▒░    ░▒▓█▓▒░░▒▓█▓▒░░▒▓████████▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓███████▓▒░  ░▒▓██████▓▒░ ░▒▓█▓▒░░▒▓█▓▒░░▒▓████████▓▒░░▒▓███████▓▒░  
''')
print('''
  _____  _                               __     __                                         
 / ____|| |                              \ \   / /                                         
| |     | |__    ___    ___   ___   ___   \ \_/ /___   _   _  _ __    ___ __      __ _ __  
| |     | '_ \  / _ \  / _ \ / __| / _ \   \   // _ \ | | | || '__|  / _ \\ \ /\ / /| '_ \ 
| |____ | | | || (_) || (_) |\__ \|  __/    | || (_) || |_| || |    | (_) |\ V  V / | | | |
 \_____||_| |_| \___/  \___/ |___/ \___|    |_| \___/  \__,_||_|     \___/  \_/\_/  |_| |_|                 
''')
print('''
  _______                                         _____       _                    _    _____  _           
 |__   __|                                       |_   _|     | |                  | |  / ____|(_)          
    | | _ __  ___   __ _  ___  _   _  _ __  ___    | |   ___ | |  __ _  _ __    __| | | (___   _  ____ ___ 
    | || '__|/ _ \ / _` |/ __|| | | || '__|/ _ \   | |  / __|| | / _` || '_ \  / _` |  \___ \ | ||_  // _ /
    | || |  |  __/| (_| |\__ \| |_| || |  |  __/  _| |_ \__ \| || (_| || | | || (_| |  ____) || | / /|  __/
    |_||_|   \___| \__,_||___/ \__,_||_|   \___| |_____||___/|_| \__,_||_| |_| \__,_| |_____/ |_|/___|\___|
''')
print("Island Size can be any size of your choice (eg 2x2, 3x3, 4x5 or 9x9 ....) ")
size = input("Enter the Size of Treasure Map\n")
Treasure_Map_creation_6.Creation(size,"spawn")

print("Now Your Task is to Find the Treasure\n")
print('''
 .----------------.  .----------------.  .----------------.  .----------------.  .----------------. 
| .--------------. || .--------------. || .--------------. || .--------------. || .--------------. |
| |  _______     | || | _____  _____ | || |   _____      | || |  _________   | || |    _______   | |
| | |_   __ \    | || ||_   _||_   _|| || |  |_   _|     | || | |_   ___  |  | || |   /  ___  |  | |
| |   | |__) |   | || |  | |    | |  | || |    | |       | || |   | |_  \_|  | || |  |  (__ \_|  | |
| |   |  __ /    | || |  | '    ' |  | || |    | |   _   | || |   |  _|  _   | || |   '.___`-.   | |
| |  _| |  \ \_  | || |   \ `--' /   | || |   _| |__/ |  | || |  _| |___/ |  | || |  |`\____) |  | |
| | |____| |___| | || |    `.__.'    | || |  |________|  | || | |_________|  | || |  |_______.'  | |
| |              | || |              | || |              | || |              | || |              | |
| '--------------' || '--------------' || '--------------' || '--------------' || '--------------' |
 '----------------'  '----------------'  '----------------'  '----------------'  '----------------' 
''')
print("You will be spawned in the starting position of the map")
print("You have to move in the map to find the treasure")
print("You can move in the map using the following commands")
print("left, right, up, down")
print("You have to find the treasure in the minimum number of moves")

print('''
          _____             _____                    _____                    _____             _____          
         /\    \           /\    \                  /\    \                  /\    \           /\    \         
        /::\    \         /::\    \                /::\    \                /::\    \         /::\    \        
       /::::\    \        \:::\    \              /::::\    \              /::::\    \        \:::\    \       
      /::::::\    \        \:::\    \            /::::::\    \            /::::::\    \        \:::\    \      
     /:::/\:::\    \        \:::\    \          /:::/\:::\    \          /:::/\:::\    \        \:::\    \     
    /:::/__\:::\    \        \:::\    \        /:::/__\:::\    \        /:::/__\:::\    \        \:::\    \    
    \:::\   \:::\    \       /::::\    \      /::::\   \:::\    \      /::::\   \:::\    \       /::::\    \   
  ___\:::\   \:::\    \     /::::::\    \    /::::::\   \:::\    \    /::::::\   \:::\    \     /::::::\    \  
 /\   \:::\   \:::\    \   /:::/\:::\    \  /:::/\:::\   \:::\    \  /:::/\:::\   \:::\____\   /:::/\:::\    \ 
/::\   \:::\   \:::\____\ /:::/  \:::\____\/:::/  \:::\   \:::\____\/:::/  \:::\   \:::|    | /:::/  \:::\____/
\:::\   \:::\   \::/    //:::/    \::/    /\::/    \:::\  /:::/    /\::/   |::::\  /:::|____|/:::/    \::/    /
 \:::\   \:::\   \/____//:::/    / \/____/  \/____/ \:::\/:::/    /  \/____|:::::\/:::/    //:::/    / \/____/ 
  \:::\   \:::\    \   /:::/    /                    \::::::/    /         |:::::::::/    //:::/    /          
   \:::\   \:::\____\ /:::/    /                      \::::/    /          |::|\::::/    //:::/    /           
    \:::\  /:::/    / \::/    /                       /:::/    /           |::| \::/____/ \::/    /            
     \:::\/:::/    /   \/____/                       /:::/    /            |::|  ~|        \/____/             
      \::::::/    /                                 /:::/    /             |::|   |                            
       \::::/    /                                 /:::/    /              \::|   |                            
        \::/    /                                  \::/    /                \:|   |                            
         \/____/                                    \/____/                  \|___|                            
''')
print("You are at the starting position of the map")
print("You can see the map below")
print("You have to find the treasure X")
print("All the best")
print("Your Map is as follows")
count = 0
mincount = 0
def Find():
    global count
    Treasure_Map_creation_6.print_map(Treasure_Map_creation_6.map)
    row = 0
    col = 0
    while(True):
        move = input("Enter your move (left, right, up, down)\n")
        Treasure_Map_creation_6.map[row][col] = "️⬜️"
        if(move.lower() == "right"):
            if(col == int(size.split("x")[1])-1):
                print("You can't go right")
            else:
                col += 1
                count += 1
        elif(move.lower() == "left"):
            if(col == 0):
                print("You cannot go left")
            else:
                col -=1
                count += 1
        elif(move.lower() == "up"):
            if(row == 0):
                print("You cannot go up")
            else:
                row -= 1
                count += 1
        elif(move.lower() == "down"):
            if(row == int(size.split("x")[0]) - 1):
                print("You cannot go down")
            else:
                row += 1
                count += 1
        else:
            print("Invalid Move")
        if(Treasure_Map_creation_6.map[row][col] == "X"):
            Treasure_Map_creation_6.map[row][col] = "🚶+ X"
            Treasure_Map_creation_6.print_map(Treasure_Map_creation_6.map)
            print("Congrats! You have found the treasure")
            break
        else:
            print("You are at the position")
            Treasure_Map_creation_6.map[row][col] = "🚶"
            Treasure_Map_creation_6.print_map(Treasure_Map_creation_6.map)

def Minmoves():
    global mincount
    row = 0
    col = 0
    rowans = 0
    colans = 0
    for i in range(len(Treasure_Map_creation_6.map)):
        for j in range(len(Treasure_Map_creation_6.map[i])):
            if(Treasure_Map_creation_6.map[i][j] == "X"):
                rowans = i
                colans = j
    while(True):
        if(row == rowans and col == colans):
            break
        if(row < rowans):
            row += 1
            mincount += 1
        if(row > rowans):
            row -= 1
            mincount += 1
        if(col < colans):
            col += 1
            mincount += 1
        if(col > colans):
            col -= 1
            mincount += 1
    
Minmoves()
Find()
print("You have found the treasure in",count,"moves")
print("Minimum number of moves to find the treasure is",mincount)
if(count == mincount):
    print("You have found the treasure in minimum number of moves")
elif(mincount - count <= 3):
    print("You were very close to the minimum number of moves")
else:
    print("You can do better than this")
print("Thank you for playing the game")

